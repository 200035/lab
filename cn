sliding window

#include<stdio.h>
int main()
{
int w,i,f,frames[50];
printf("Enter window size: ");
scanf("%d",&w);
printf("\nEnter number of frames to transmit: ");
scanf("%d",&f);
printf("\nEnter %d frames: ",f);
for(i=1;i<=f;i++)
scanf("%d",&frames[i]);
printf("\nWith sliding window protocol the frames will be sent in the following manner (assuming no corruption of frames)\n\n");
printf("After sending %d frames at each stage sender waits for acknowledgement sent by the receiver\n\n",w);
for(i=1;i<=f;i++)
{
if(i%w==0)
{
printf("%d\n",frames[i]);
printf("Acknowledgement of above frames sent is received by sender\n\n");
}
else
II B.Tech II semester(CSE) CN&OS LAB
CMR Institute of Technology Page 25
printf("%d ",frames[i]);
}
if(f%w!=0)
printf("\nAcknowledgement of above frames sent is received by sender\n");
return 0;
}

spm

#include <stdio.h>
#define infinity 9999
#define MAX 20
int minimum(int a,int b)
{
if(a<=b)
return a;
else
return b;
}
main()
{
int i,j,k,n,start,end,adj[MAX][MAX],path[MAX][MAX];
printf("Enter number of vertices : ");
scanf("%d",&n);
printf("Enter weighted matrix :\n");
for(i=0;i<n;i++)
for(j=0;j<n;j++)
scanf("%d",&adj[i][j]);
for(i=0;i<n;i++)
for(j=0;j<n;j++)
if(adj[i][j]==0)
path[i][j]=infinity;
else
path[i][j]=adj[i][j];
for(k=0;k<n;k++)
{
for(i=0;i<n;i++)
for(j=0;j<n;j++){
if(i==j)
path[i][j]=infinity;
else path[i][j]=minimum(path[i][j],path[i][k]+path[k][j]);
}
II B.Tech II semester(CSE) CN&OS LAB
CMR Institute of Technology Page 30
}
printf("Shortest path matrix is :\n");
for(i=0;i<n;i++)
{
for(j=0;j<n;j++)
printf("%6d",path[i][j]);
printf("\n");
}
printf("Enter start vertex :");
scanf("%d",&start);
printf("Enter end vertex :");
scanf("%d",&end);
printf("the min. cost between %d and %d is %d",start,end,path[start][end]);
}
OUTPUT:
Enter number of vertices:4
Enter weighted matrix:
0 1 3 0
1 0 0 4
3 0 0 4
0 4 4 0
Shortest path matrix is
9999 1 3 5
1 9999 4 4
3 4 9999 4
5 4 4 9999
Enter start vertex:1
Enter end vertex:3
The min cost between 1 and 3 is 4
Process returned 34(0X22) execution time:69.346s
Press any key to continue.

broadcast
#include<stdio.h>
int a[10][10],n;
main(){
int i,j,root;
printf("Enter no.of nodes:");
scanf("%d",&n);
printf("Enter adjacent matrix\n");
for(i=1;i<=n;i++)
for(j=1;j<=n;j++){
printf("Enter connecting of %d-->%d::",i,j);
scanf("%d",&a[i][j]);
}
printf("Enter root node:");
scanf("%d",&root);
adj(root);
}
adj(int k){
int i,j;
printf("Adjacent node of root node::\n");
printf("%d\n\n",k);
for(j=1;j<=n;j++)
{
if(a[k][j]==1 || a[j][k]==1)
printf("%d\t",j);
}
printf("\n");
for(i=1;i<=n;i++){
if((a[k][j]==0) && (a[i][k]==0) && (i!=k))
printf("%d",i);
}
}
II B.Tech II semester(CSE) CN&OS LAB
CMR Institute of Technology Page 34
OUTPUT: Enter no.of nodes:5 Enter adjacent matrix Enter connecting of 1-->1::0 Enter connecting of 1-->2::1 Enter connecting of 1-->3::1 Enter connecting of 1-->4::0 Enter connecting of 1-->5::0 Enter connecting of 2-->1::1 Enter connecting of 2-->2::0
Enter connecting of 2-->3::1
Enter connecting of 2-->4::1
Enter connecting of 2-->5::0
Enter connecting of 3-->1::1
Enter connecting of 3-->2::1
Enter connecting of 3-->3::0
Enter connecting of 3-->4::0
Enter connecting of 3-->5::0
Enter connecting of 4-->1::0
Enter connecting of 4-->2::1
Enter connecting of 4-->3::0
Enter connecting of 4-->4::0
Enter connecting of 4-->5::1
Enter connecting of 5-->1::0
Enter connecting of 5-->2::0
Enter connecting of 5-->3::0 
Enter connecting of 5-->4::1
Enter connecting of 5-->5::0
Enter root node:2
Adjacent node of root node:: 2 1 3 4 5

cfp
#include<iostream.h>
#include<stdio.h>
#include<conio.h>
void main()
{
int i,j,k;
int sn;
int st[20];
cout<<"\n How many stations: ";
cin>>sn;
char op;
do
{
cout<<"\n Enter status of stations";
for (i=0;i<sn;i++)
{
cout<<"\n Enter status of station "<<i+1<<" : ";
cin>>st[i];
}
//Print ready stations
for (i=0;i<sn;i++)
{
if(st[i]==1)
{
cout<<"\n Station "<<i+1<<" is ready to transmit";
}
}
cout<<"\n Repeat? Press Y :";
cin>>op;
}
while(op=='y' || op=='Y');
getch();
}
